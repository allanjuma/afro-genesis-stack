
#!/bin/bash

# Health Checker for Afro Network
# This script checks the health of all services

set -e

check_service_health() {
    echo "üîç Checking service health..."

    # Check mainnet validator
    if curl -s http://localhost:8545 > /dev/null; then
        echo "‚úÖ Mainnet validator node is running (http://localhost:8545)"
    else
        echo "‚ö†Ô∏è  Mainnet validator node is not responding yet"
    fi

    # Check testnet validator
    if curl -s http://localhost:8547 > /dev/null; then
        echo "‚úÖ Testnet validator node is running (http://localhost:8547)"
    else
        echo "‚ö†Ô∏è  Testnet validator node is not responding yet"
    fi

    # Check mainnet explorer
    if curl -s http://localhost:4000 > /dev/null; then
        echo "‚úÖ Mainnet explorer is running (http://localhost:4000)"
    else
        echo "‚ö†Ô∏è  Mainnet explorer is not responding yet (may take a few minutes to start)"
    fi

    # Check testnet explorer
    if curl -s http://localhost:4001 > /dev/null; then
        echo "‚úÖ Testnet explorer is running (http://localhost:4001)"
    else
        echo "‚ö†Ô∏è  Testnet explorer is not responding yet (may take a few minutes to start)"
    fi

    # Check web frontend
    if curl -s http://localhost:80 > /dev/null; then
        echo "‚úÖ Web frontend is running (http://localhost:80)"
    else
        echo "‚ö†Ô∏è  Web frontend is not responding yet"
    fi

    # Check CEO agent
    if curl -s http://localhost:3000/health > /dev/null; then
        echo "‚úÖ CEO agent is running (http://localhost:3000)"
    else
        echo "‚ö†Ô∏è  CEO agent is not responding yet"
    fi
}

display_completion_info() {
    echo ""
    echo "üéâ Afro Network setup complete!"
    echo ""
    echo "üìã Service URLs:"
    echo "   ‚Ä¢ Web Frontend: http://localhost"
    echo "   ‚Ä¢ Mainnet Explorer: http://localhost:4000"
    echo "   ‚Ä¢ Testnet Explorer: http://localhost:4001"
    echo "   ‚Ä¢ Mainnet RPC: http://localhost:8545"
    echo "   ‚Ä¢ Testnet RPC: http://localhost:8547"
    echo "   ‚Ä¢ Mainnet WebSocket: ws://localhost:8546"
    echo "   ‚Ä¢ Testnet WebSocket: ws://localhost:8548"
    echo "   ‚Ä¢ CEO Agent API: http://localhost:3000"
    echo ""
    echo "ü§ñ CEO Agent Integration:"
    echo "   ‚Ä¢ Strategic Management: AI-powered network oversight"
    echo "   ‚Ä¢ Customer Support: Automated question handling"
    echo "   ‚Ä¢ GitHub Integration: Automatic issue creation and PR management"
    echo "   ‚Ä¢ Network Monitoring: Continuous health checks with alerting"
    echo "   ‚Ä¢ Chat API: http://localhost:3000/api/chat"
    echo "   ‚Ä¢ Status API: http://localhost:3000/api/status"
    echo ""
    echo "‚öôÔ∏è  CEO Agent Configuration:"
    echo "   ‚Ä¢ Ollama URL: Configure OLLAMA_BASE_URL in .env"
    echo "   ‚Ä¢ Model: Configure OLLAMA_MODEL in .env (default: llama3.1:8b)"
    echo "   ‚Ä¢ GitHub: Set GITHUB_TOKEN and GITHUB_REPO in .env for automation"
    echo ""
    echo "üì± Mobile Money Integration:"
    echo "   ‚Ä¢ Address Format: afro:254700000000:[extra_characters]"
    echo "   ‚Ä¢ Country Code: 254 (Kenya)"
    echo "   ‚Ä¢ Mobile Money Code: 700000000"
    echo "   ‚Ä¢ SMS Validation: Enabled"
    echo "   ‚Ä¢ OTP Generation: From address extra characters"
    echo ""
    echo "üîß MetaMask Configuration:"
    echo "   Mainnet:"
    echo "   ‚Ä¢ Network Name: Afro Network"
    echo "   ‚Ä¢ RPC URL: http://localhost:8545"
    echo "   ‚Ä¢ Chain ID: 7878"
    echo "   ‚Ä¢ Currency: AFRO"
    echo "   ‚Ä¢ Explorer: http://localhost:4000"
    echo ""
    echo "   Testnet:"
    echo "   ‚Ä¢ Network Name: Afro Testnet"
    echo "   ‚Ä¢ RPC URL: http://localhost:8547"
    echo "   ‚Ä¢ Chain ID: 7879"
    echo "   ‚Ä¢ Currency: tAFRO"
    echo "   ‚Ä¢ Explorer: http://localhost:4001"
    echo ""
    echo "üìñ Next Steps:"
    echo "   1. Configure CEO Agent: Edit .env file with your Ollama and GitHub settings"
    echo "   2. Visit http://localhost to see the landing page"
    echo "   3. Test CEO Agent: curl -X POST http://localhost:3000/api/chat -H 'Content-Type: application/json' -d '{\"message\":\"What is the current network status?\"}'"
    echo "   4. Click 'Add Mainnet to MetaMask' or 'Add Testnet to MetaMask'"
    echo "   5. Explore the blockchain at http://localhost:4000 (mainnet) or http://localhost:4001 (testnet)"
    echo ""
    echo "üîß Management Commands:"
    echo "   ‚Ä¢ View logs: docker-compose logs -f"
    echo "   ‚Ä¢ View CEO logs: docker-compose logs -f ceo"
    echo "   ‚Ä¢ Stop services: docker-compose down"
    echo "   ‚Ä¢ Restart services: docker-compose restart"
    echo "   ‚Ä¢ Update: docker-compose pull && docker-compose up -d"
    echo "   ‚Ä¢ Force rebuild: docker-compose build --no-cache && docker-compose up -d"
    echo ""
    echo "Enjoy your Afro Network with AI-powered CEO Agent! üåçüì±ü§ñ"
}
