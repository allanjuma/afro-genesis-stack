
version: '3.8'

services:
  # Mainnet Services
  afro-validator:
    build: ./validator
    container_name: afro-validator
    ports:
      - "30303:30303"
      - "8545:8545"
      - "8546:8546"
    volumes:
      - validator_data:/root/.ethereum
    networks:
      - afro-network
    environment:
      - NETWORK_ID=7878
      - CHAIN_ID=7878
      - AFRO_BOOTSTRAP_DOMAIN=${AFRO_MAINNET_BOOTSTRAP:-afro-mainnet.bitsoko.org}
      - AFRO_BOOTSTRAP_PORT=${AFRO_BOOTSTRAP_PORT_MAINNET:-30303}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  afro-db:
    image: postgres:14
    container_name: afro-db
    environment:
      POSTGRES_DB: blockscout
      POSTGRES_USER: blockscout
      POSTGRES_PASSWORD: blockscout_password
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - afro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blockscout"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  afro-explorer:
    build: ./explorer
    container_name: afro-explorer
    ports:
      - "4000:4000"
    depends_on:
      - afro-db
      - afro-validator
    environment:
      - DATABASE_URL=postgresql://blockscout:blockscout_password@afro-db:5432/blockscout
      - ETHEREUM_JSONRPC_VARIANT=geth
      - ETHEREUM_JSONRPC_HTTP_URL=http://afro-validator:8545
      - ETHEREUM_JSONRPC_WS_URL=ws://afro-validator:8546
      - COIN=AFRO
      - SUBNETWORK=Afro Network
      - NETWORK=Afro
      - LOGO=/images/afro-logo.png
      - CHAIN_ID=7878
    networks:
      - afro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Testnet Services
  afro-testnet-validator:
    build: ./validator-testnet
    container_name: afro-testnet-validator
    ports:
      - "30304:30304"
      - "8547:8547"
      - "8548:8548"
    volumes:
      - testnet_validator_data:/root/.ethereum
    networks:
      - afro-network
    environment:
      - NETWORK_ID=7879
      - CHAIN_ID=7879
      - AFRO_BOOTSTRAP_DOMAIN=${AFRO_TESTNET_BOOTSTRAP:-afro-testnet.bitsoko.org}
      - AFRO_BOOTSTRAP_PORT=${AFRO_BOOTSTRAP_PORT_TESTNET:-30304}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8547"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  afro-testnet-db:
    image: postgres:14
    container_name: afro-testnet-db
    environment:
      POSTGRES_DB: blockscout
      POSTGRES_USER: blockscout
      POSTGRES_PASSWORD: blockscout_testnet_password
    volumes:
      - testnet_db_data:/var/lib/postgresql/data
    networks:
      - afro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blockscout"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  afro-testnet-explorer:
    build: ./explorer-testnet
    container_name: afro-testnet-explorer
    ports:
      - "4001:4001"
    depends_on:
      - afro-testnet-db
      - afro-testnet-validator
    environment:
      - DATABASE_URL=postgresql://blockscout:blockscout_testnet_password@afro-testnet-db:5432/blockscout
      - ETHEREUM_JSONRPC_VARIANT=geth
      - ETHEREUM_JSONRPC_HTTP_URL=http://afro-testnet-validator:8547
      - ETHEREUM_JSONRPC_WS_URL=ws://afro-testnet-validator:8548
      - COIN=tAFRO
      - SUBNETWORK=Afro Testnet
      - NETWORK=Afro Testnet
      - LOGO=/images/afro-logo.png
      - CHAIN_ID=7879
    networks:
      - afro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  afro-web:
    build: ./web
    container_name: afro-web
    ports:
      - "80:80"
    networks:
      - afro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # CEO Management Agent
  ceo:
    build: ./ceo
    container_name: afro-ceo
    ports:
      - "3000:3000"
    depends_on:
      - afro-validator
      - afro-testnet-validator
      - afro-explorer
      - afro-testnet-explorer
    environment:
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://localhost:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO=${GITHUB_REPO:-afro-network/afro-blockchain}
      - MAINNET_RPC_URL=http://afro-validator:8545
      - TESTNET_RPC_URL=http://afro-testnet-validator:8547
      - MAINNET_EXPLORER_URL=http://afro-explorer:4000
      - TESTNET_EXPLORER_URL=http://afro-testnet-explorer:4001
      - NODE_ENV=production
    volumes:
      - ceo_data:/app/data
    networks:
      - afro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  afro-network:
    driver: bridge

volumes:
  validator_data:
  db_data:
  testnet_validator_data:
  testnet_db_data:
  ceo_data:
